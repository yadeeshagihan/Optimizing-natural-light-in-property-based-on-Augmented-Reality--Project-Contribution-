# -*- coding: utf-8 -*-
"""Custom05.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1erDrJlKldvHdrHnU-alT1Tz5fwtWvmr6
"""

from google.colab import drive
drive.mount('/content/drive')

!ls /content/drive/MyDrive/

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/custom_yolo_project

!git clone https://github.com/ultralytics/yolov5.git

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/custom_yolo_project/yolov5

import yaml


with open('models/yolov5s.yaml', 'r') as file:
    config = yaml.safe_load(file)


print(config)

!python train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg models/yolov5s.yaml --weights yolov5s.pt --epochs 5

new_layer = [-1, 1, 'Conv', [512, 3, 1]]
config['head'].insert(-1, new_layer)

config['nc'] = 3

with open('/content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml', 'w') as file:
    yaml.dump(config, file, default_flow_style=False)


with open('/content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml', 'r') as file:
    print(file.read())

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 5

import yaml


with open('/content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml', 'r') as file:
    config = yaml.safe_load(file)


new_layers = [
    [-1, 1, 'Conv', [256, 3, 1]],
]

neck_index = len(config['head']) - 1
config['head'] = config['head'][:-1] + new_layers + [config['head'][-1]]


with open('/content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml', 'w') as file:
    yaml.dump(config, file, default_flow_style=False)


with open('/content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml', 'r') as file:
    print(file.read())

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 5

new_head_layers = [
    [-1, 1, 'Conv', [512, 3, 1]],
    [-1, 1, 'Conv', [256, 3, 1]],
    [-1, 1, 'SPPF', [256]],
    [-1, 1, 'Conv', [128, 1, 1]]
]


config['head'] = config['head'][:-1] + new_head_layers + [config['head'][-1]]


with open('/content/drive/MyDrive/custom/yolov5/models/yolov5s.yaml', 'w') as file:
    yaml.dump(config, file, default_flow_style=False)


with open('/content/drive/MyDrive/custom/yolov5/models/yolov5s.yaml', 'r') as file:
    print(file.read())

!python /content/drive/MyDrive/custom/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg models/yolov5s.yaml --weights yolov5s.pt --epochs 5

import yaml

yaml_file_path = '/content/drive/MyDrive/custom_yolo_project/yolov5/data/hyps/hyp.Objects365.yaml'

with open(yaml_file_path, 'r') as file:
    hyp_data = yaml.safe_load(file)


hyp_data['lr0'] = 0.01

with open(yaml_file_path, 'w') as file:
    yaml.dump(hyp_data, file, default_flow_style=False)

print(f"Updated {yaml_file_path} with new hyperparameters.")

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 10 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 15 --batch-size 16 --img-size 640

import yaml

yaml_file_path = '/content/drive/MyDrive/custom_yolo_project/yolov5/data/hyps/hyp.Objects365.yaml'

with open(yaml_file_path, 'r') as file:
    hyp_data = yaml.safe_load(file)


hyp_data['lr0'] = 0.001

with open(yaml_file_path, 'w') as file:
    yaml.dump(hyp_data, file, default_flow_style=False)

print(f"Updated {yaml_file_path} with new hyperparameters.")

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 15 --batch-size 16 --img-size 640

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

image_path = '/content/drive/MyDrive/custom_yolo_project/images/test.png'


results = model(image_path)


results.show()
results.save(save_dir=Path('./inference_results'))

print("Results:", results.pandas().xyxy[0])

from google.colab import drive
drive.mount('/content/drive')

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

image_path = '//content/drive/MyDrive/custom_yolo_project/images/test1.jpg'

results = model(image_path)

results.show()
results.save(save_dir=Path('./content/drive/My Drive/inference_results'))

print("Results:", results.pandas().xyxy[0])

import torch
from pathlib import Path

# Load the YOLOv5 model
model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

# Set the image path
image_path = '/content/drive/MyDrive/custom_yolo_project/images/test1.jpg'

# Perform inference
results = model(image_path)

# Get results as a pandas DataFrame
detections = results.pandas().xyxy[0]  # Extract bounding box data

# Calculate heights of bounding boxes
detections['height'] = detections['ymax'] - detections['ymin']

# Print the heights of all bounding boxes
print("Bounding Box Heights:")
print(detections[['name', 'height']])

import torch
print(torch.cuda.is_available())  # Should return True
print(torch.cuda.current_device())  # Returns the GPU ID in use

!python /content/drive/MyDrive/custom_yolo_project/yolov5/export.py --weights /content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt --img-size 640 --batch-size 1 --device 0 --dynamic --simplify --include onnx

!python /content/drive/MyDrive/custom_yolo_project/yolov5/val.py --weights /content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.onnx --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --img-size 640 --batch 1 --device 0 --task val

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

image_path = '/content/drive/MyDrive/custom_yolo_project/images/test2.png'

results = model(image_path)

results.show()
results.save(save_dir=Path('./content/drive/My Drive/inference_results'))

print("Results:", results.pandas().xyxy[0])

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

image_path = '/content/drive/MyDrive/custom_yolo_project/images/test4.jpg'

results = model(image_path)

results.show()
results.save(save_dir=Path('./content/drive/My Drive/inference_results'))

print("Results:", results.pandas().xyxy[0])

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp9/weights/best.pt')

image_path = '/content/drive/MyDrive/custom_yolo_project/images/test5.jpg'

results = model(image_path)

results.show()
results.save(save_dir=Path('./content/drive/My Drive/inference_results'))

print("Results:", results.pandas().xyxy[0])

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 20 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 30 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 40 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 50 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 60 --batch-size 16 --img-size 640

import torch
from PIL import Image
from pathlib import Path

model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/drive/MyDrive/custom_yolo_project/yolov5/runs/train/exp14/weights/best.pt')

image_path = '/content/drive/MyDrive/custom_yolo_project/images/test6.jpg'

results = model(image_path)

results.show()
results.save(save_dir=Path('./content/drive/My Drive/inference_results'))

print("Results:", results.pandas().xyxy[0])

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 70 --batch-size 16 --img-size 640

!python /content/drive/MyDrive/custom_yolo_project/yolov5/train.py --data /content/drive/MyDrive/custom_yolo_project/dataset.yaml --cfg /content/drive/MyDrive/custom_yolo_project/yolov5/models/yolov5s.yaml --weights yolov5s.pt --epochs 80 --batch-size 16 --img-size 640